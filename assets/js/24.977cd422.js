(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{409:function(t,a,s){"use strict";s.r(a);var n=s(51),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"github-actions-cheat-sheet"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-actions-cheat-sheet"}},[t._v("#")]),t._v(" GitHub Actions (Cheat Sheet)")]),t._v(" "),s("p",[s("strong",[t._v("Published:")]),t._v(" "),s("em",[t._v("04/16/2021")])]),t._v(" "),s("p",[t._v("In this blog I created a "),s("a",{attrs:{href:"https://docs.github.com/en/actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub Actions"),s("OutboundLink")],1),t._v(" reference to help aid in learning GitHub Actions (CI/CD tooling).")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"context"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#context"}},[t._v("#")]),t._v(" Context")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Workflows")]),t._v(" "),s("ul",[s("li",[t._v("Automated procedure")]),t._v(" "),s("li",[t._v("Made of one or more jobs")]),t._v(" "),s("li",[t._v("Can be "),s("strong",[t._v("scheduled")]),t._v(" or "),s("strong",[t._v("event-triggered")])])])]),t._v(" "),s("li",[s("p",[t._v("Events")]),t._v(" "),s("ul",[s("li",[t._v("Triggers a workflow from a specific activity")]),t._v(" "),s("li",[t._v("Can be trigged on a "),s("strong",[t._v("schedule")]),t._v(", "),s("strong",[t._v("manual events")]),t._v(", & "),s("strong",[t._v("web-hook events.")])])])]),t._v(" "),s("li",[s("p",[t._v("Jobs")]),t._v(" "),s("ul",[s("li",[t._v("Set of "),s("strong",[t._v("steps")]),t._v(" that execute on the same "),s("strong",[t._v("runner")])]),t._v(" "),s("li",[t._v("By "),s("em",[t._v("default")]),t._v(" will run in "),s("strong",[t._v("parallel")]),t._v(" when multiple jobs are detected")]),t._v(" "),s("li",[t._v("Can be configured "),s("strong",[t._v("sequentially (non-parallel)")]),t._v(" that are dependent other jobs")])])]),t._v(" "),s("li",[s("p",[t._v("Steps")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Individual task")]),t._v(" that can run commands inside a job")]),t._v(" "),s("li",[t._v("Executes on the same runner")]),t._v(" "),s("li",[t._v("Allows actions in the "),s("strong",[t._v("same")]),t._v(" job to "),s("strong",[t._v("share data")]),t._v(" with each other")])])]),t._v(" "),s("li",[s("p",[t._v("Actions")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("Standalone")]),t._v(" commands that are combined in steps to create a job")]),t._v(" "),s("li",[t._v("Can create your own actions")]),t._v(" "),s("li",[t._v("Attach "),s("strong",[t._v("community")]),t._v(" created actions by the GitHub community\n"),s("ul",[s("li",[t._v("Included as a step")])])])])]),t._v(" "),s("li",[s("p",[t._v("Runners")]),t._v(" "),s("ul",[s("li",[t._v("Server that runs the "),s("strong",[t._v("GitHub Actions Runner Application")])]),t._v(" "),s("li",[t._v("Can use a "),s("strong",[t._v("runner")]),t._v(" provided by "),s("strong",[t._v("GitHub")]),t._v(" or "),s("strong",[t._v("self hosted")])]),t._v(" "),s("li",[s("strong",[t._v("Listens")]),t._v(" for "),s("strong",[t._v("jobs")]),t._v(" "),s("ul",[s("li",[t._v("Runs one job at a time")]),t._v(" "),s("li",[t._v("Reports progress, logs, and results back")])])])])])]),t._v(" "),s("p",[s("em",[t._v("Reference:")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/introduction-to-github-actions",target:"_blank",rel:"noopener noreferrer"}},[t._v("Introduction to GitHub Actions"),s("OutboundLink")],1)]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"workflows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workflows"}},[t._v("#")]),t._v(" Workflows")]),t._v(" "),s("h3",{attrs:{id:"example-workflow"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-workflow"}},[t._v("#")]),t._v(" Example Workflow")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" automated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("check\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lint-codebase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm run lint\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo code")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On success, do nothing")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On error, job fail")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prettify-codebase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm run prettify\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# sudo code")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On success, push updated code")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On fail, do nothing")]),t._v("\n")])])]),s("h3",{attrs:{id:"workflow-breakdown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workflow-breakdown"}},[t._v("#")]),t._v(" Workflow Breakdown")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" automated"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("code"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("check\n")])])]),s("p",[s("em",[t._v("Optional")]),t._v(", name that will appear in the "),s("strong",[t._v("Actions tab")]),t._v(" of the GitHub repo.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("push"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("Specified "),s("strong",[t._v("event")]),t._v(" that will trigger the workflow file.")]),t._v(" "),s("p",[s("em",[t._v("Reference")]),t._v(":")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#onpushpull_requestpaths",target:"_blank",rel:"noopener noreferrer"}},[t._v("Workflow syntax for GitHub Actions"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),s("p",[t._v("Groups "),s("strong",[t._v("all")]),t._v(" jobs ran under "),s("strong",[t._v("automated-code-check")]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("lint-codebase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("prettify-codebase")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),s("p",[t._v("Defines "),s("strong",[t._v("steps")]),t._v(" under specified job name(s).")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n")])])]),s("p",[t._v("Configures a "),s("strong",[t._v("job")]),t._v(" to run on a specified "),s("strong",[t._v("environment")]),t._v(" on a "),s("strong",[t._v("runner.")])]),t._v(" "),s("p",[s("em",[t._v("Reference")]),t._v(":")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on",target:"_blank",rel:"noopener noreferrer"}},[t._v("Workflow syntax for GitHub Actions"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/checkout@v2\n")])])]),s("ul",[s("li",[t._v("Keyword "),s("strong",[t._v("uses")]),t._v(" tells job to "),s("strong",[t._v("retrieve")]),t._v(", a "),s("strong",[t._v("community")]),t._v(" made "),s("strong",[t._v("action.")])])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Single line execution")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" npm install\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Multi line execution")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),s("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n\tnpm install\n\tnpm lint")]),t._v("\n")])])]),s("p",[s("code",[t._v("runs")]),t._v(" Executes "),s("strong",[t._v("single line")]),t._v(" or "),s("strong",[t._v("multiple line")]),t._v(" commands within each "),s("strong",[t._v("runner")]),t._v(".")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#environment-variables"}},[t._v("#")]),t._v(" Environment Variables")]),t._v(" "),s("p",[t._v("The wiki "),s("strong",[s("em",[t._v("strongly")]),t._v(" recommends")]),t._v(" the use of environment variables to access the filesystem instead of hardcoded file paths. Set environment variables are available to all "),s("strong",[t._v("runner environments")]),t._v(".")]),t._v(" "),s("p",[t._v("A list of all "),s("strong",[t._v("default")]),t._v(" environment can be referenced here...")]),t._v(" "),s("p",[s("em",[t._v("Reference")]),t._v(":")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.github.com/en/actions/reference/environment-variables#default-environment-variables",target:"_blank",rel:"noopener noreferrer"}},[t._v("Environment variables"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"setting-custom-environment-variables"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#setting-custom-environment-variables"}},[t._v("#")]),t._v(" Setting Custom Environment Variables")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "host'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $ENV_HOST"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' $ENV_PORT" '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" credentials.txt\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ENV_HOST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hostname\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ENV_PORT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n")])])]),s("p",[t._v("Environment Variables are "),s("strong",[t._v("available")]),t._v(" at "),s("strong",[t._v("every step")]),t._v(" in a workflow and can be "),s("em",[t._v("secretly")]),t._v(" & "),s("em",[t._v("securely")]),t._v(" used to import values from GitHub.")]),t._v(" "),s("ul",[s("li",[t._v("If "),s("em",[t._v("ENV")]),t._v(" variable ****is "),s("strong",[t._v("referenced")]),t._v(" in runner (inside instance), use "),s("em",[s("code",[t._v("$ENV_VAR")])])]),t._v(" "),s("li",[t._v("Otherwise "),s("em",[t._v("ENV")]),t._v(" must be referenced (before job is sent to runner) from context using "),s("em",[s("code",[t._v("env.ENV_VARIABLE")])])])]),t._v(" "),s("p",[t._v("Example "),s("em",[t._v("ENV")]),t._v(" variable assignment using the "),s("strong",[t._v("context")]),t._v(" vs "),s("strong",[t._v("runner operating system")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("jobs")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("start_of_week_job")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("latest\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("FIRST_DAY_OF_WEEK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Mon\n    "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"It\'s a brand new week!"')]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" env.FIRST_DAY_OF_WEEK == 'Mon'\n        "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' echo "Happy $FIRST_DAY_OF_WEEK'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" it's a brand new week"),s("span",{pre:!0,attrs:{class:"token tag"}},[t._v("!")]),t._v('"\n        '),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("FIRST_DAY_OF_WEEK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" env.FIRST_DAY_OF_WEEK\n")])])]),s("p",[s("em",[t._v("Reference")]),t._v(":")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.github.com/en/actions/reference/environment-variables",target:"_blank",rel:"noopener noreferrer"}},[t._v("Environment variables"),s("OutboundLink")],1)]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"conditional-jobs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conditional-jobs"}},[t._v("#")]),t._v(" Conditional Jobs")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If PROD set to true, run steps")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" env.ENV_PROD\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' "host'),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $ENV_HOST"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' $ENV_PORT" '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" credentials.txt\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ENV_HOST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" hostname\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ENV_PORT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3306")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ENV_PROD")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])]),s("p",[s("strong",[t._v("Conditionals")]),t._v(" are used when you want your "),s("strong",[t._v("job")]),t._v(" to only run if a "),s("strong",[t._v("specific")]),t._v(" "),s("em",[t._v("criteria")]),t._v("/"),s("em",[t._v("condition")]),t._v(" is met.")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"change-run-on-specific-working-directory"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#change-run-on-specific-working-directory"}},[t._v("#")]),t._v(" Change/Run on specific Working Directory")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Clean temp directory\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" rm "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("rf *\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("working-directory")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./temp\n")])])]),s("p",[s("code",[t._v("working-directory")]),t._v(" can "),s("strong",[t._v("execute")]),t._v(" command(s) in a specific directory.")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"matrix-s"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#matrix-s"}},[t._v("#")]),t._v(" Matrix's")]),t._v(" "),s("p",[s("strong",[t._v("Matrix's")]),t._v(" runs "),s("strong",[t._v("multiple")]),t._v(" jobs with a given set of "),s("strong",[t._v("steps")])]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("runs-on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" matrix.os "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("strategy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("matrix")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("os")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("16.04")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" ubuntu"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("18.04")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" \n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Check Ubuntu version\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" lsb_release "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("a\n")])])]),s("p",[t._v("This example given provides two jobs that will be run using the provided "),s("strong",[t._v("matrix")]),t._v(" to execute ("),s("em",[t._v("check version command")]),t._v(")  on both "),s("strong",[t._v("Ubuntu 16.04")]),t._v(" & "),s("strong",[s("strong",[t._v("Ubuntu 18.04")])]),t._v(" "),s("em",[t._v("operating system(s).")])]),t._v(" "),s("p",[s("em",[t._v("Reference")]),t._v(":")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.github.com/en/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix",target:"_blank",rel:"noopener noreferrer"}},[t._v("Managing complex workflows"),s("OutboundLink")],1)]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"running-scripts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#running-scripts"}},[t._v("#")]),t._v(" Running Scripts")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Run build script\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" ./.github/scripts/build.sh\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bash\n")])])]),s("p",[t._v("Scripts can be "),s("strong",[t._v("stored")]),t._v(" inside your "),s("strong",[t._v("repository")]),t._v(" in which you can provide the "),s("em",[t._v("path")]),t._v(" & "),s("em",[t._v("shell")]),t._v(" type to run the script as an action.")]),t._v(" "),s("hr"),t._v(" "),s("h2",{attrs:{id:"workflow-artifacts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#workflow-artifacts"}},[t._v("#")]),t._v(" Workflow Artifacts")]),t._v(" "),s("p",[s("strong",[t._v("Workflow Artifacts")]),t._v(" allow you to share data between jobs & allow storage of data after a workflow has been completed.")]),t._v(" "),s("p",[s("em",[t._v("Example Artifacts")]),t._v(":")]),t._v(" "),s("ul",[s("li",[t._v("Logs")]),t._v(" "),s("li",[t._v("Test results")]),t._v(" "),s("li",[t._v("Compressed files")])]),t._v(" "),s("p",[s("strong",[t._v("Artifacts")]),t._v(" properties")]),t._v(" "),s("ul",[s("li",[t._v("Free on public or self-hosted runners\n"),s("ul",[s("li",[t._v("Private repos limited amount of free minutes/storage")])])]),t._v(" "),s("li",[t._v("Default "),s("strong",[t._v("90 day")]),t._v(" retention period")]),t._v(" "),s("li",[t._v("Once an artifact is deleted it cannot be restored")])]),t._v(" "),s("p",[s("em",[t._v("Reference")]),t._v(":")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://docs.github.com/en/actions/guides/storing-workflow-data-as-artifacts#uploading-build-and-test-artifacts",target:"_blank",rel:"noopener noreferrer"}},[t._v("Storing workflow data as artifacts"),s("OutboundLink")],1)]),t._v(" "),s("h3",{attrs:{id:"uploading-artifacts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#uploading-artifacts"}},[t._v("#")]),t._v(" Uploading Artifacts")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bash\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' echo "Test" '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" test.log\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Upload test log file as artifact\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/upload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifact@v2\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("of"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifact\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test.log\n")])])]),s("p",[t._v("In this example we have a "),s("code",[t._v("test.log")]),t._v(" file which we want to "),s("strong",[t._v("upload")]),t._v(" as an "),s("strong",[t._v("artifact")]),t._v(" called "),s("code",[t._v("test-name-of-artifact")]),t._v(".")]),t._v(" "),s("h3",{attrs:{id:"modifying-artifact-retention-period"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#modifying-artifact-retention-period"}},[t._v("#")]),t._v(" Modifying Artifact Retention Period")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("shell")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" bash\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("run")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(' echo "Test" '),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v(" test.log\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Upload test log file as artifact\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/upload"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifact@v2\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("of"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifact\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test.log\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retention-days")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("p",[t._v("Using the same example provided before, we can "),s("strong",[t._v("customize")]),t._v(" the retention period with "),s("code",[t._v("retention-days")]),t._v(" with the following.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retention-days")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n")])])]),s("p",[t._v("Retention is specified by days in which the value cannot exceed the "),s("strong",[t._v("retention limit")]),t._v(" set by the repo, org, or enterprise.")]),t._v(" "),s("h3",{attrs:{id:"downloading-artifacts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#downloading-artifacts"}},[t._v("#")]),t._v(" Downloading Artifacts")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("steps")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Download test.log artifact\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/download"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifact@v2\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("of"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifact\n")])])]),s("p",[t._v("In this we example we download the "),s("code",[t._v("test-name-of-artifact")]),t._v(" we uploaded in the previous section. You can only "),s("strong",[t._v("download")]),t._v(" artifacts that were uploaded during the "),s("strong",[t._v("same")]),t._v(" workflow run.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("uses")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" actions/download"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifact@v2\n")])])]),s("p",[t._v("With this we call a "),s("strong",[t._v("community")]),t._v(" made action to "),s("strong",[t._v("download")]),t._v(" any artifacts needed for this workflow run.")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("with")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("of"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("artifact\n")])])]),s("ul",[s("li",[t._v("Then we will specify a specific artifact we want to download and use in this workflow.")])]),t._v(" "),s("hr")])}),[],!1,null,null,null);a.default=e.exports}}]);