(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{403:function(e,t,o){"use strict";o.r(t);var a=o(51),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("p",[o("strong",[e._v("Date")]),e._v(": "),o("em",[e._v("10/23/2020")])]),e._v(" "),o("p",[e._v("This week I set up a "),o("code",[e._v("crontab")]),e._v(" on my linux "),o("em",[e._v("dev enviornment")]),e._v(" to auto update & upgrade all my linux services. I also made the big switch from windows to "),o("code",[e._v("PopOS")]),e._v(" (a linux ubuntu distro) and installed a toolkit called "),o("code",[e._v("touchegg")]),e._v(" to implement multi-gesture support on my "),o("em",[e._v("trackpad")]),e._v(". Finally I used "),o("code",[e._v("Rclone")]),e._v(" to sync up my "),o("em",[e._v("shared")]),e._v(" folder on google drive to my linux laptop.")]),e._v(" "),o("h2",{attrs:{id:"setting-up-a-cron-job-for-linux"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-a-cron-job-for-linux"}},[e._v("#")]),e._v(" Setting up a Cron job for Linux")]),e._v(" "),o("p",[e._v("It was super easy to setup a "),o("code",[e._v("Cron")]),e._v(" job with a simple command available called "),o("code",[e._v("crontab -e")]),e._v(". This command specifies a "),o("code",[e._v("cron")]),e._v(" editor with the "),o("code",[e._v("-e")]),e._v(" edit flag. Once I was able to open up the crontab configuration file I made a new cron with the following format "),o("code",[e._v("[Minute] [Hour in 24 Hour Format] [Day of Month] [Month] [Day of Week] (USER) (CMD)")]),e._v(". This allowed me to schedule "),o("code",[e._v("apt update && apt upgrade -y")]),e._v(" to be run every day of the week.")]),e._v(" "),o("img",{staticStyle:{"max-width":"30rem"},attrs:{src:"/assets/2020/linux_crontab.png",alt:"cron job scheduling using linux crontab"}}),e._v(" "),o("p",[e._v("I used this amazing article to help set-up my Cron job scheduler: "),o("a",{attrs:{href:"https://www.tecmint.com/create-and-manage-cron-jobs-on-linux/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Techmint Crontab Article"),o("OutboundLink")],1)]),e._v(" "),o("h2",{attrs:{id:"using-the-touchegg-framework-to-program-a-linux-touchpad"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#using-the-touchegg-framework-to-program-a-linux-touchpad"}},[e._v("#")]),e._v(" Using the touchegg framework to program a linux touchpad")]),e._v(" "),o("p",[e._v("During my transition from "),o("strong",[e._v("Windows 10")]),e._v(" to "),o("strong",[e._v("Linux")]),e._v(" ("),o("em",[e._v("PopOS an Ubuntu distro")]),e._v(") I was met with a massive amount of initial configuration I had to do to set-up my machine the way I wanted it. I was very suprised with the amount of configuration I was able to do with the services/packages available on a "),o("strong",[e._v("debian")]),e._v(" distro. One of the packages I used to help configure my system was "),o("strong",[e._v("touchegg")]),e._v(", a toolkit which provides "),o("em",[e._v("multi-touch")]),e._v(" touchpad support which is interfaced with a custom "),o("em",[e._v("markdown")]),e._v(" configuration fie.")]),e._v(" "),o("br"),e._v(" "),o("p",[e._v("Here's a link to touchegg if intersted in setting up your own: "),o("a",{attrs:{href:"https://github.com/JoseExposito/touchegg",target:"_blank",rel:"noopener noreferrer"}},[e._v("Touchegg GitHub Repo"),o("OutboundLink")],1)]),e._v(" "),o("img",{staticStyle:{"max-width":"30rem"},attrs:{src:"/assets/2020/linux_touchegg.gif",alt:"trackpad multi-finger gesture"}}),e._v(" "),o("p",[e._v("As you can see from the above "),o("em",[e._v("gif")]),e._v(", I was able to set-up a multi-figer swipe to change my different "),o("em",[e._v("workspaces")]),e._v(" on my machine. "),o("em",[e._v("Touchegg")]),e._v(" provides support for ("),o("em",[e._v("swipes")]),e._v(", "),o("em",[e._v("touches")]),e._v(", "),o("em",[e._v("zooming")]),e._v(", "),o("em",[e._v("multi-finger")]),e._v(") with pre-made functionality or your own "),o("strong",[e._v("custom commands")]),e._v(" to run.")]),e._v(" "),o("h2",{attrs:{id:"using-rclone-to-interface-with-google-drive"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#using-rclone-to-interface-with-google-drive"}},[e._v("#")]),e._v(" Using Rclone to interface with Google Drive")]),e._v(" "),o("p",[e._v("I encountered a problem with my "),o("em",[e._v("Linux")]),e._v(" enviornment in which my "),o("em",[e._v("shared")]),e._v(" folder on my "),o("strong",[e._v("Google Drive")]),e._v(" does not support a "),o("em",[e._v("Linux")]),e._v(" interface. One of the solutions I found was "),o("strong",[e._v("Rclone")]),e._v(" which allows you to use the "),o("em",[e._v("CLI")]),e._v(" to run "),o("strong",[e._v("CRUD")]),e._v(" ("),o("em",[e._v("Create/Read/Update/Delete")]),e._v(") functionality on "),o("strong",[e._v("cloud storage")]),e._v(" providers like "),o("em",[e._v("Google, AWS, Azure, etc.")]),e._v(" to manage your storage "),o("em",[e._v("locally")]),e._v(" and "),o("em",[e._v("remote")]),e._v(" changes. I used a command like "),o("code",[e._v("rclone copy")]),e._v(" or "),o("code",[e._v("rclone sync")]),e._v(" to manage these updates through a Command Line Interface ("),o("em",[e._v("CLI")]),e._v(").")]),e._v(" "),o("img",{staticStyle:{"max-width":"30rem"},attrs:{src:"/assets/2020/linux_rclone.png",alt:"rclone google drive"}}),e._v(" "),o("p",[e._v("Learn more about managing your cloud storage providers at the following link...")]),e._v(" "),o("p",[o("a",{attrs:{href:"https://rcglone.org/docs/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Rclone Documentation"),o("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);